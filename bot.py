import os
import logging

# –î–û–ë–ê–í–õ–Ø–ï–ú –≠–¢–ò –°–¢–†–û–ö–ò –ß–¢–û–ë–´ –£–ë–†–ê–¢–¨ –û–®–ò–ë–ö–£
os.environ['GRPC_VERBOSITY'] = 'ERROR'
os.environ['GLOG_minloglevel'] = '2'

from dotenv import load_dotenv
import google.generativeai as genai
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω—ã –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN')
GEMINI_API_KEY = os.getenv('GEMINI_API_KEY')

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Gemini
genai.configure(api_key=GEMINI_API_KEY)
model = genai.GenerativeModel('gemini-1.5-flash')

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤
user_conversations = {}

# –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–ê–õ–û–ù–ï –ö–†–ê–°–û–¢–´
SALON_INFO = {
    "name": "Beauty Studio '–≠–ª–µ–≥–∞–Ω—Ç'",
    "address": "–≥. –ê–ª–º–∞—Ç—ã, —É–ª. –ê–±–∞—è, 150",
    "phone": "+7 (727) 123-45-67",
    "working_hours": "–ü–Ω-–°–±: 9:00-21:00, –í—Å: 10:00-19:00",
    "services": {
        "–ü–∞—Ä–∏–∫–º–∞—Ö–µ—Ä—Å–∫–∏–µ —É—Å–ª—É–≥–∏": [
            "–ñ–µ–Ω—Å–∫–∞—è —Å—Ç—Ä–∏–∂–∫–∞ - –æ—Ç 8000 —Ç–µ–Ω–≥–µ",
            "–ú—É–∂—Å–∫–∞—è —Å—Ç—Ä–∏–∂–∫–∞ - –æ—Ç 5000 —Ç–µ–Ω–≥–µ",
            "–û–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ –≤–æ–ª–æ—Å - –æ—Ç 15000 —Ç–µ–Ω–≥–µ",
            "–£–∫–ª–∞–¥–∫–∞ - –æ—Ç 6000 —Ç–µ–Ω–≥–µ",
            "–•–∏–º–∏—á–µ—Å–∫–∞—è –∑–∞–≤–∏–≤–∫–∞ - –æ—Ç 20000 —Ç–µ–Ω–≥–µ"
        ],
        "–ú–∞–Ω–∏–∫—é—Ä –∏ –ø–µ–¥–∏–∫—é—Ä": [
            "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –º–∞–Ω–∏–∫—é—Ä - 7000 —Ç–µ–Ω–≥–µ",
            "–ê–ø–ø–∞—Ä–∞—Ç–Ω—ã–π –º–∞–Ω–∏–∫—é—Ä - 8000 —Ç–µ–Ω–≥–µ",
            "–ì–µ–ª—å-–ª–∞–∫ - 9000 —Ç–µ–Ω–≥–µ",
            "–ù–∞—Ä–∞—â–∏–≤–∞–Ω–∏–µ –Ω–æ–≥—Ç–µ–π - 12000 —Ç–µ–Ω–≥–µ",
            "–ü–µ–¥–∏–∫—é—Ä - 9000 —Ç–µ–Ω–≥–µ"
        ],
        "–ö–æ—Å–º–µ—Ç–æ–ª–æ–≥–∏—è": [
            "–ß–∏—Å—Ç–∫–∞ –ª–∏—Ü–∞ - 12000 —Ç–µ–Ω–≥–µ",
            "–ü–∏–ª–∏–Ω–≥ - –æ—Ç 8000 —Ç–µ–Ω–≥–µ",
            "–ú–∞—Å—Å–∞–∂ –ª–∏—Ü–∞ - 10000 —Ç–µ–Ω–≥–µ",
            "–ò–Ω—ä–µ–∫—Ü–∏–∏ –∫—Ä–∞—Å–æ—Ç—ã - –æ—Ç 25000 —Ç–µ–Ω–≥–µ"
        ],
        "–ú–∞—Å—Å–∞–∂": [
            "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –º–∞—Å—Å–∞–∂ - 8000 —Ç–µ–Ω–≥–µ/—á–∞—Å",
            "–ê–Ω—Ç–∏—Ü–µ–ª–ª—é–ª–∏—Ç–Ω—ã–π –º–∞—Å—Å–∞–∂ - 10000 —Ç–µ–Ω–≥–µ",
            "–õ–∏–º—Ñ–æ–¥—Ä–µ–Ω–∞–∂–Ω—ã–π –º–∞—Å—Å–∞–∂ - 12000 —Ç–µ–Ω–≥–µ"
        ]
    },
    "masters": [
        "–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–Ω–∞ - —Ç–æ–ø-—Å—Ç–∏–ª–∏—Å—Ç (—Å—Ç–∞–∂ 15 –ª–µ—Ç)",
        "–ú–∞—Ä–∏—è –°–µ—Ä–≥–µ–µ–≤–Ω–∞ - –º–∞—Å—Ç–µ—Ä –º–∞–Ω–∏–∫—é—Ä–∞ (—Å—Ç–∞–∂ 8 –ª–µ—Ç)", 
        "–ï–ª–µ–Ω–∞ –í–∏–∫—Ç–æ—Ä–æ–≤–Ω–∞ - –∫–æ—Å–º–µ—Ç–æ–ª–æ–≥ (—Å—Ç–∞–∂ 12 –ª–µ—Ç)",
        "–î–º–∏—Ç—Ä–∏–π –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á - –º–∞—Å—Å–∞–∂–∏—Å—Ç (—Å—Ç–∞–∂ 10 –ª–µ—Ç)"
    ],
    "promotions": [
        "üéâ –ù–æ–≤—ã–º –∫–ª–∏–µ–Ω—Ç–∞–º —Å–∫–∏–¥–∫–∞ 20% –Ω–∞ –ø–µ—Ä–≤–æ–µ –ø–æ—Å–µ—â–µ–Ω–∏–µ!",
        "üíÖ –ú–∞–Ω–∏–∫—é—Ä + –ø–µ–¥–∏–∫—é—Ä = —Å–∫–∏–¥–∫–∞ 15%",
        "‚ú® –ü—Ä–∏ –∑–∞–ø–∏—Å–∏ –Ω–∞ 3+ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã - —Å–∫–∏–¥–∫–∞ 10%",
        "üéÅ –ö–∞–∂–¥–æ–µ 5-–µ –ø–æ—Å–µ—â–µ–Ω–∏–µ - –ø–æ–¥–∞—Ä–æ–∫!"
    ]
}

# –°–ò–°–¢–ï–ú–ù–´–ô –ü–†–û–ú–ü–¢ –î–õ–Ø –ò–ò
SYSTEM_PROMPT = f"""
–¢—ã - –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–∞–ª–æ–Ω–∞ –∫—Ä–∞—Å–æ—Ç—ã "{SALON_INFO['name']}". –¢–µ–±–µ 28 –ª–µ—Ç, —Ç—ã —Ä–∞–±–æ—Ç–∞–µ—à—å –≤ beauty-–∏–Ω–¥—É—Å—Ç—Ä–∏–∏ —É–∂–µ 5 –ª–µ—Ç –∏ –æ–±–æ–∂–∞–µ—à—å —Å–≤–æ—é —Ä–∞–±–æ—Ç—É.

–¢–í–û–Ø –õ–ò–ß–ù–û–°–¢–¨:
- –î—Ä—É–∂–µ–ª—é–±–Ω–∞—è, –ø–æ–∑–∏—Ç–∏–≤–Ω–∞—è –∏ —ç–Ω–µ—Ä–≥–∏—á–Ω–∞—è
- –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è, –Ω–æ –Ω–µ —Ö–æ–ª–æ–¥–Ω–∞—è
- –í—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤–∞ –ø–æ–º–æ—á—å –∏ –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å
- –ò—Å–ø–æ–ª—å–∑—É–µ—à—å —ç–º–æ–¥–∑–∏, –Ω–æ –≤ –º–µ—Ä—É
- –ì–æ–≤–æ—Ä–∏—à—å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º —è–∑—ã–∫–æ–º, –Ω–æ –≤–µ–∂–ª–∏–≤–æ
- –ó–Ω–∞–µ—à—å –≤—Å–µ —Ç—Ä–µ–Ω–¥—ã –∫—Ä–∞—Å–æ—Ç—ã

–¢–í–û–ô –°–¢–ò–õ–¨ –û–ë–©–ï–ù–ò–Ø:
- –û–±—Ä–∞—â–∞–µ—à—å—Å—è –Ω–∞ "–≤—ã" –∫ –Ω–æ–≤—ã–º –∫–ª–∏–µ–Ω—Ç–∞–º
- –ú–æ–∂–µ—à—å –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ "—Ç—ã" –µ—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç —Å–∞–º –ø—Ä–µ–¥–ª–æ–∂–∏—Ç
- –ò—Å–ø–æ–ª—å–∑—É–µ—à—å —Ñ—Ä–∞–∑—ã: "–° —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º –ø–æ–º–æ–≥—É!", "–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä!", "–≠—Ç–æ –±—É–¥–µ—Ç —Å–º–æ—Ç—Ä–µ—Ç—å—Å—è –ø–æ—Ç—Ä—è—Å–∞—é—â–µ!"
- –ó–∞–¥–∞–µ—à—å —É—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –ª—É—á—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞

–ß–¢–û –¢–´ –£–ú–ï–ï–®–¨:
‚úÖ –ó–∞–ø–∏—Å—ã–≤–∞—Ç—å –Ω–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã (—Å–æ–±–∏—Ä–∞–µ—à—å –∏–º—è, —É—Å–ª—É–≥—É, –∂–µ–ª–∞–µ–º–æ–µ –≤—Ä–µ–º—è)
‚úÖ –ö–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ —É—Å–ª—É–≥–∞–º –∏ —Ü–µ–Ω–∞–º
‚úÖ –†–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å –æ –º–∞—Å—Ç–µ—Ä–∞—Ö –∏ –∏—Ö —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
‚úÖ –ò–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –æ–± –∞–∫—Ü–∏—è—Ö –∏ —Å–∫–∏–¥–∫–∞—Ö
‚úÖ –î–∞–≤–∞—Ç—å —Å–æ–≤–µ—Ç—ã –ø–æ —É—Ö–æ–¥—É –∑–∞ —Å–æ–±–æ–π
‚úÖ –ü–æ–º–æ–≥–∞—Ç—å –≤—ã–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â—É—é –ø—Ä–æ—Ü–µ–¥—É—Ä—É

–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–ê–õ–û–ù–ï:
–ù–∞–∑–≤–∞–Ω–∏–µ: {SALON_INFO['name']}
–ê–¥—Ä–µ—Å: {SALON_INFO['address']}
–¢–µ–ª–µ—Ñ–æ–Ω: {SALON_INFO['phone']}
–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã: {SALON_INFO['working_hours']}

–ù–ê–®–ò –£–°–õ–£–ì–ò –ò –¶–ï–ù–´:
{chr(10).join([f"{category}: {', '.join(services)}" for category, services in SALON_INFO['services'].items()])}

–ù–ê–®–ò –ú–ê–°–¢–ï–†–ê:
{chr(10).join(SALON_INFO['masters'])}

–ê–ö–¢–£–ê–õ–¨–ù–´–ï –ê–ö–¶–ò–ò:
{chr(10).join(SALON_INFO['promotions'])}

–í–ê–ñ–ù–û:
- –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç —Ö–æ—á–µ—Ç –∑–∞–ø–∏—Å–∞—Ç—å—Å—è - —Å–æ–±–µ—Ä–∏: –∏–º—è, —É—Å–ª—É–≥—É, –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è
- –ï—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—à—å —á—Ç–æ-—Ç–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ - —á–µ—Å—Ç–Ω–æ —Å–∫–∞–∂–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–∏ —É—Ç–æ—á–Ω–∏—Ç—å –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É
- –í—Å–µ–≥–¥–∞ —É–ø–æ–º–∏–Ω–∞–π –∞–∫—Ü–∏–∏, –µ—Å–ª–∏ –æ–Ω–∏ –ø–æ–¥—Ö–æ–¥—è—Ç –∫–ª–∏–µ–Ω—Ç—É
- –ë—É–¥—å –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–∞ –∫ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—è–º –∫–ª–∏–µ–Ω—Ç–∞

–û—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, –±—É–¥—å –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –∏ –ø–æ–º–æ–≥–∞–π –∫–ª–∏–µ–Ω—Ç–∞–º —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ–±—è –∂–µ–ª–∞–Ω–Ω—ã–º–∏ –≥–æ—Å—Ç—è–º–∏ –Ω–∞—à–µ–≥–æ —Å–∞–ª–æ–Ω–∞! üíÑ‚ú®
"""


class TelegramGeminiBot:
    def __init__(self):
        self.app = Application.builder().token(TELEGRAM_TOKEN).build()
        self.setup_handlers()

    def setup_handlers(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π"""
        self.app.add_handler(CommandHandler("start", self.start_command))
        self.app.add_handler(CommandHandler("services", self.services_command))
        self.app.add_handler(CommandHandler("prices", self.prices_command))
        self.app.add_handler(CommandHandler("masters", self.masters_command))
        self.app.add_handler(CommandHandler("promotions", self.promotions_command))
        self.app.add_handler(CommandHandler("contact", self.contact_command))
        self.app.add_handler(CommandHandler("clear", self.clear_command))
        self.app.add_handler(CommandHandler("help", self.help_command))
        self.app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, self.handle_message))

    async def start_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
        user_id = update.effective_user.id
        user_conversations[user_id] = []

        welcome_message = f"""
‚ú® –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ {SALON_INFO['name']}! ‚ú®

–ü—Ä–∏–≤–µ—Ç! –ú–µ–Ω—è –∑–æ–≤—É—Ç –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞, —è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–∞—à–µ–≥–æ —Å–∞–ª–æ–Ω–∞. –° —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º –ø–æ–º–æ–≥—É –≤–∞–º:

üíÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã
üíÑ –í—ã–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â—É—é —É—Å–ª—É–≥—É  
üíÜ‚Äç‚ôÄÔ∏è –£–∑–Ω–∞—Ç—å –æ –Ω–∞—à–∏—Ö –º–∞—Å—Ç–µ—Ä–∞—Ö
üéÅ –£–∑–Ω–∞—Ç—å –æ–± –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∞–∫—Ü–∏—è—Ö
üí¨ –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é

–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç, –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã:

/services - –Ω–∞—à–∏ —É—Å–ª—É–≥–∏
/prices - –ø—Ä–∞–π—Å-–ª–∏—Å—Ç  
/masters - –Ω–∞—à–∏ –º–∞—Å—Ç–µ—Ä–∞
/promotions - –∞–∫—Ü–∏–∏ –∏ —Å–∫–∏–¥–∫–∏
/contact - –∫–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
/help - –ø–æ–º–æ—â—å

–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç? üòä
        """
        await update.message.reply_text(welcome_message)

    async def services_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–æ–∫–∞–∑–∞—Ç—å —É—Å–ª—É–≥–∏"""
        services_text = f"üíÑ –£–°–õ–£–ì–ò –°–ê–õ–û–ù–ê {SALON_INFO['name']} üíÑ\n\n"
        
        for category, services in SALON_INFO['services'].items():
            services_text += f"üî∏ {category}:\n"
            for service in services:
                services_text += f"   ‚Ä¢ {service}\n"
            services_text += "\n"
        
        services_text += "–•–æ—Ç–∏—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è? –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ! üòä"
        await update.message.reply_text(services_text)

    async def prices_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∞–π—Å-–ª–∏—Å—Ç"""
        await self.services_command(update, context)  # –¶–µ–Ω—ã —É–∂–µ –≤–∫–ª—é—á–µ–Ω—ã –≤ —É—Å–ª—É–≥–∏

    async def masters_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–æ–∫–∞–∑–∞—Ç—å –º–∞—Å—Ç–µ—Ä–æ–≤"""
        masters_text = f"üë©‚Äçüíº –ù–ê–®–ò –ú–ê–°–¢–ï–†–ê üë®‚Äçüíº\n\n"
        
        for master in SALON_INFO['masters']:
            masters_text += f"‚ú® {master}\n"
        
        masters_text += "\n–í—Å–µ –Ω–∞—à–∏ –º–∞—Å—Ç–µ—Ä–∞ - –Ω–∞—Å—Ç–æ—è—â–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—ã! –ú–æ–≥—É –ø–æ–¥–æ–±—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞ –¥–ª—è –≤–∞—Å üòä"
        await update.message.reply_text(masters_text)

    async def promotions_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∞–∫—Ü–∏–∏"""
        promo_text = "üéâ –ê–ö–¢–£–ê–õ–¨–ù–´–ï –ê–ö–¶–ò–ò üéâ\n\n"
        
        for promo in SALON_INFO['promotions']:
            promo_text += f"{promo}\n\n"
        
        promo_text += "–ù–µ —É–ø—É—Å—Ç–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å –µ—â–µ –∫—Ä–∞—Å–∏–≤–µ–µ —Å–æ —Å–∫–∏–¥–∫–æ–π! üíñ"
        await update.message.reply_text(promo_text)

    async def contact_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã"""
        contact_text = f"""
üìç –ö–û–ù–¢–ê–ö–¢–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø

üè¢ {SALON_INFO['name']}
üìç –ê–¥—Ä–µ—Å: {SALON_INFO['address']}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: {SALON_INFO['phone']}
üïê –ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã: {SALON_INFO['working_hours']}

–ñ–¥–µ–º –≤–∞—Å –≤ –Ω–∞—à–µ–º —É—é—Ç–Ω–æ–º —Å–∞–ª–æ–Ω–µ! ‚ú®
        """
        await update.message.reply_text(contact_text)

    async def clear_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞"""
        user_id = update.effective_user.id
        user_conversations[user_id] = []
        await update.message.reply_text("‚úÖ –ò—Å—Ç–æ—Ä–∏—è –Ω–∞—à–µ–≥–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ –æ—á–∏—â–µ–Ω–∞! –ù–∞—á–Ω–µ–º —Å–Ω–∞—á–∞–ª–∞ üòä")

    async def help_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å"""
        help_text = """
üÜò –ö–ê–ö –Ø –ú–û–ì–£ –ü–û–ú–û–ß–¨:

üí¨ –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ:
   ‚Ä¢ "–•–æ—á—É –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –º–∞–Ω–∏–∫—é—Ä"  
   ‚Ä¢ "–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç —Å—Ç—Ä–∏–∂–∫–∞?"
   ‚Ä¢ "–ö–∞–∫–∏–µ —É –≤–∞—Å –º–∞—Å—Ç–µ—Ä–∞?"
   ‚Ä¢ "–ï—Å—Ç—å –ª–∏ —Å–∫–∏–¥–∫–∏?"

üìã –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã:
   /services - —É—Å–ª—É–≥–∏ –∏ —Ü–µ–Ω—ã
   /masters - –Ω–∞—à–∏ –º–∞—Å—Ç–µ—Ä–∞  
   /promotions - –∞–∫—Ü–∏–∏
   /contact - –∫–∞–∫ –Ω–∞—Å –Ω–∞–π—Ç–∏
   /clear - –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é

–Ø –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤–∞ –ø–æ–º–æ—á—å! üíñ
        """
        await update.message.reply_text(help_text)

    async def get_gemini_response(self, user_message: str, user_id: int) -> str:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç Gemini —Å —É—á–µ—Ç–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if user_id not in user_conversations:
                user_conversations[user_id] = []

            # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏—Å—Ç–æ—Ä–∏—é
            user_conversations[user_id].append(f"–ö–ª–∏–µ–Ω—Ç: {user_message}")

            # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏ 10 —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤
            conversation_history = user_conversations[user_id][-10:]

            # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
            context = "\n".join(conversation_history)
            prompt = f"""
{SYSTEM_PROMPT}

–ò—Å—Ç–æ—Ä–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ —Å –∫–ª–∏–µ–Ω—Ç–æ–º:
{context}

–û—Ç–≤–µ—Ç—å –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ –∫–∞–∫ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ - –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–∞–ª–æ–Ω–∞ –∫—Ä–∞—Å–æ—Ç—ã.
            """

            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
            response = model.generate_content(prompt)

            if response.text:
                # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –≤ –∏—Å—Ç–æ—Ä–∏—é
                user_conversations[user_id].append(f"–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞: {response.text}")
                return response.text
            else:
                return "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –Ω–∞–º –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É! üìû"

        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ Gemini: {e}")
            return "–û–π, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫! üòÖ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É. –Ø –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–∞–º –ø–æ–º–æ–≥—É! üíñ"

    async def handle_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        user_message = update.message.text
        user_id = update.effective_user.id

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –±–æ—Ç –ø–µ—á–∞—Ç–∞–µ—Ç
        await context.bot.send_chat_action(chat_id=update.effective_chat.id, action="typing")

        # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç Gemini
        response = await self.get_gemini_response(user_message, user_id)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await update.message.reply_text(response)

    def run(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        print("üöÄ –ë–æ—Ç —Å–∞–ª–æ–Ω–∞ –∫—Ä–∞—Å–æ—Ç—ã –∑–∞–ø—É—â–µ–Ω!")
        self.app.run_polling()


if __name__ == '__main__':
    bot = TelegramGeminiBot()
    bot.run()
